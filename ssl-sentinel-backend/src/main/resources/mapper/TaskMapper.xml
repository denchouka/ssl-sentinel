<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cool.tch.mapper.TaskMapper">

    <insert id="addTask" parameterType="cool.tch.entity.Task">
        insert into task (
            domain_name,
            application_platform,
            usage_platform,
            purpose,
            ddl,
            date,
            email,
            content,
            <if test="remark != null">
                remark,
            </if>
            status
        ) values (
            #{domainName},
            #{applicationPlatform},
            #{usagePlatform},
            #{purpose},
            #{ddl},
            #{date},
            #{email},
            #{content},
            <if test="remark != null">
                #{remark},
            </if>
            #{status}
        )
    </insert>

    <select id="list" resultType="cool.tch.entity.Task">
        select
            id,
            domain_name,
            application_platform,
            usage_platform,
            purpose,
            ddl,
            date,
            email,
            content,
            remark,
            status
        from
            task
        <where>
            <if test="domainName != null and domainName != ''">
                AND domain_name like CONCAT('%', #{domainName}, '%')
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="ddl != null">
                AND ddl = #{ddl}
            </if>
        </where>
        order by
            ddl desc
    </select>

    <select id="executeList" resultType="cool.tch.entity.Task">
        <![CDATA[
        select
            id,
            domain_name,
            application_platform,
            usage_platform,
            purpose,
            ddl,
            date,
            email,
            content,
            remark,
            status
        from
            task
        where
            status in (${notStarted}, ${inProgress})
            and date <= curdate()
        order by
            ddl
        ]]>
    </select>

    <update id="updateTaskStatusById">
        update
            task
        set
            status = #{status}
        where id = #{id}
    </update>

    <select id="selectById" resultType="cool.tch.entity.Task">
        select
            id,
            domain_name,
            application_platform,
            usage_platform,
            purpose,
            ddl,
            date,
            email,
            content,
            remark,
            status
        from
            task
        where
            id = #{id}
    </select>

    <update id="editTask">
        update
            task
        set
            domain_name = #{domainName},
            application_platform = #{applicationPlatform},
            usage_platform = #{usagePlatform},
            purpose = #{purpose},
            ddl = #{ddl},
            date = #{date},
            email = #{email},
            content = #{content},
            remark = #{remark}
        where
            id = #{id}
    </update>

</mapper>